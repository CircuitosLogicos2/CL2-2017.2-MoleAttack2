|moles_attack
CLOCK_50 => CLOCK_50.IN6
KEY[0] => KEY[0].IN2
KEY[1] => KEY[1].IN2
KEY[2] => KEY[2].IN2
KEY[3] => KEY[3].IN2
LEDG[0] <= MOLE[0].DB_MAX_OUTPUT_PORT_TYPE
LEDG[1] <= MOLE[0].DB_MAX_OUTPUT_PORT_TYPE
LEDG[2] <= MOLE[1].DB_MAX_OUTPUT_PORT_TYPE
LEDG[3] <= MOLE[1].DB_MAX_OUTPUT_PORT_TYPE
LEDG[4] <= MOLE[2].DB_MAX_OUTPUT_PORT_TYPE
LEDG[5] <= MOLE[2].DB_MAX_OUTPUT_PORT_TYPE
LEDG[6] <= MOLE[3].DB_MAX_OUTPUT_PORT_TYPE
LEDG[7] <= MOLE[3].DB_MAX_OUTPUT_PORT_TYPE
LEDG[8] <= <GND>
HEX0[0] <= <GND>
HEX0[1] <= <GND>
HEX0[2] <= <GND>
HEX0[3] <= <GND>
HEX0[4] <= <GND>
HEX0[5] <= <GND>
HEX0[6] <= <VCC>
HEX1[0] <= HEX1[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX1[1] <= HEX1[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX1[2] <= HEX1[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX1[3] <= HEX1[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX1[4] <= HEX1[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX1[5] <= HEX1[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX1[6] <= HEX1[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX2[0] <= HEX2[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX2[1] <= HEX2[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX2[2] <= HEX2[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX2[3] <= HEX2[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX2[4] <= HEX2[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX2[5] <= HEX2[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX2[6] <= HEX2[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX3[0] <= HEX3[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX3[1] <= <GND>
HEX3[2] <= <GND>
HEX3[3] <= HEX3[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX3[4] <= HEX3[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX3[5] <= HEX3[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX3[6] <= <VCC>
HEX4[0] <= HEX4[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX4[1] <= <GND>
HEX4[2] <= HEX4[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX4[3] <= HEX4[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX4[4] <= HEX4[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX4[5] <= HEX4[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX4[6] <= HEX4[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX5[0] <= <GND>
HEX5[1] <= <GND>
HEX5[2] <= <GND>
HEX5[3] <= <GND>
HEX5[4] <= <GND>
HEX5[5] <= <GND>
HEX5[6] <= <VCC>
HEX6[0] <= HEX6[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX6[1] <= <GND>
HEX6[2] <= HEX6[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX6[3] <= HEX6[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX6[4] <= HEX6[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX6[5] <= HEX6[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX6[6] <= HEX6[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
HEX7[0] <= <GND>
HEX7[1] <= <GND>
HEX7[2] <= <GND>
HEX7[3] <= <GND>
HEX7[4] <= <GND>
HEX7[5] <= <GND>
HEX7[6] <= <VCC>
GPIO_0[0] <> GPIO_0[0]
GPIO_0[1] <> GPIO_0[1]
GPIO_0[2] <> GPIO_0[2]
GPIO_0[3] <> GPIO_0[3]
GPIO_0[4] <> GPIO_0[4]
GPIO_0[5] <> GPIO_0[5]
GPIO_0[6] <> GPIO_0[6]
GPIO_0[7] <> GPIO_0[7]
GPIO_0[8] <> GPIO_0[8]
GPIO_0[9] <> GPIO_0[9]
GPIO_0[10] <> GPIO_0[10]
GPIO_0[11] <> GPIO_0[11]
GPIO_0[12] <> GPIO_0[12]
GPIO_0[13] <> GPIO_0[13]
GPIO_0[14] <> GPIO_0[14]
GPIO_0[15] <> GPIO_0[15]
GPIO_0[16] <> GPIO_0[16]
GPIO_0[17] <> GPIO_0[17]
GPIO_0[18] <> GPIO_0[18]
GPIO_0[19] <> GPIO_0[19]
GPIO_0[20] <> GPIO_0[20]
GPIO_0[21] <> GPIO_0[21]
GPIO_0[22] <> GPIO_0[22]
GPIO_0[23] <> GPIO_0[23]
GPIO_0[24] <> GPIO_0[24]
GPIO_0[25] <> GPIO_0[25]
GPIO_0[26] <> GPIO_0[26]
GPIO_0[27] <> GPIO_0[27]
GPIO_0[28] <> GPIO_0[28]
GPIO_0[29] <> GPIO_0[29]
GPIO_0[30] <> GPIO_0[30]
GPIO_0[31] <> GPIO_0[31]
GPIO_0[32] <> GPIO_0[32]
GPIO_0[33] <> GPIO_0[33]
GPIO_0[34] <> GPIO_0[34]
GPIO_0[35] <> GPIO_0[35]
GPIO_1[0] <> GPIO_1[0]
GPIO_1[1] <> GPIO_1[1]
GPIO_1[2] <> GPIO_1[2]
GPIO_1[3] <> GPIO_1[3]
GPIO_1[4] <> GPIO_1[4]
GPIO_1[5] <> GPIO_1[5]
GPIO_1[6] <> GPIO_1[6]
GPIO_1[7] <> GPIO_1[7]
GPIO_1[8] <> GPIO_1[8]
GPIO_1[9] <> GPIO_1[9]
GPIO_1[10] <> GPIO_1[10]
GPIO_1[11] <> GPIO_1[11]
GPIO_1[12] <> GPIO_1[12]
GPIO_1[13] <> GPIO_1[13]
GPIO_1[14] <> GPIO_1[14]
GPIO_1[15] <> GPIO_1[15]
GPIO_1[16] <> GPIO_1[16]
GPIO_1[17] <> GPIO_1[17]
GPIO_1[18] <> GPIO_1[18]
GPIO_1[19] <> GPIO_1[19]
GPIO_1[20] <> GPIO_1[20]
GPIO_1[21] <> GPIO_1[21]
GPIO_1[22] <> GPIO_1[22]
GPIO_1[23] <> GPIO_1[23]
GPIO_1[24] <> GPIO_1[24]
GPIO_1[25] <> GPIO_1[25]
GPIO_1[26] <> GPIO_1[26]
GPIO_1[27] <> GPIO_1[27]
GPIO_1[28] <> GPIO_1[28]
GPIO_1[29] <> GPIO_1[29]
GPIO_1[30] <> GPIO_1[30]
GPIO_1[31] <> GPIO_1[31]
GPIO_1[32] <> GPIO_1[32]
GPIO_1[33] <> GPIO_1[33]
GPIO_1[34] <> GPIO_1[34]
GPIO_1[35] <> GPIO_1[35]
LCD_ON <= <VCC>
LCD_BLON <= <VCC>
LCD_RW <= LCD_Display:u1.LCD_RW
LCD_EN <= LCD_Display:u1.LCD_E
LCD_RS <= LCD_Display:u1.LCD_RS
LCD_DATA[0] <> LCD_Display:u1.DATA_BUS
LCD_DATA[1] <> LCD_Display:u1.DATA_BUS
LCD_DATA[2] <> LCD_Display:u1.DATA_BUS
LCD_DATA[3] <> LCD_Display:u1.DATA_BUS
LCD_DATA[4] <> LCD_Display:u1.DATA_BUS
LCD_DATA[5] <> LCD_Display:u1.DATA_BUS
LCD_DATA[6] <> LCD_Display:u1.DATA_BUS
LCD_DATA[7] <> LCD_Display:u1.DATA_BUS


|moles_attack|Reset_Delay:r0
iCLK => oRESET~reg0.CLK
iCLK => Cont[0].CLK
iCLK => Cont[1].CLK
iCLK => Cont[2].CLK
iCLK => Cont[3].CLK
iCLK => Cont[4].CLK
iCLK => Cont[5].CLK
iCLK => Cont[6].CLK
iCLK => Cont[7].CLK
iCLK => Cont[8].CLK
iCLK => Cont[9].CLK
iCLK => Cont[10].CLK
iCLK => Cont[11].CLK
iCLK => Cont[12].CLK
iCLK => Cont[13].CLK
iCLK => Cont[14].CLK
iCLK => Cont[15].CLK
iCLK => Cont[16].CLK
iCLK => Cont[17].CLK
iCLK => Cont[18].CLK
iCLK => Cont[19].CLK
oRESET <= oRESET~reg0.DB_MAX_OUTPUT_PORT_TYPE


|moles_attack|LCD_Display:u1
iCLK_50MHZ => CLK_400HZ.CLK
iCLK_50MHZ => CLK_COUNT_400HZ[0].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[1].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[2].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[3].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[4].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[5].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[6].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[7].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[8].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[9].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[10].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[11].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[12].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[13].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[14].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[15].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[16].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[17].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[18].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[19].CLK
iRST_N => CHAR_COUNT[0].OUTPUTSELECT
iRST_N => CHAR_COUNT[1].OUTPUTSELECT
iRST_N => CHAR_COUNT[2].OUTPUTSELECT
iRST_N => CHAR_COUNT[3].OUTPUTSELECT
iRST_N => CHAR_COUNT[4].OUTPUTSELECT
iRST_N => next_command.DISPLAY_CLEAR.OUTPUTSELECT
iRST_N => next_command.DISPLAY_OFF.OUTPUTSELECT
iRST_N => next_command.RESET3.OUTPUTSELECT
iRST_N => next_command.RESET2.OUTPUTSELECT
iRST_N => next_command.RETURN_HOME.OUTPUTSELECT
iRST_N => next_command.LINE2.OUTPUTSELECT
iRST_N => next_command.Print_String.OUTPUTSELECT
iRST_N => next_command.MODE_SET.OUTPUTSELECT
iRST_N => next_command.DISPLAY_ON.OUTPUTSELECT
iRST_N => next_command.FUNC_SET.OUTPUTSELECT
iRST_N => CLK_400HZ.ACLR
iRST_N => CLK_COUNT_400HZ[0].ACLR
iRST_N => CLK_COUNT_400HZ[1].ACLR
iRST_N => CLK_COUNT_400HZ[2].ACLR
iRST_N => CLK_COUNT_400HZ[3].ACLR
iRST_N => CLK_COUNT_400HZ[4].ACLR
iRST_N => CLK_COUNT_400HZ[5].ACLR
iRST_N => CLK_COUNT_400HZ[6].ACLR
iRST_N => CLK_COUNT_400HZ[7].ACLR
iRST_N => CLK_COUNT_400HZ[8].ACLR
iRST_N => CLK_COUNT_400HZ[9].ACLR
iRST_N => CLK_COUNT_400HZ[10].ACLR
iRST_N => CLK_COUNT_400HZ[11].ACLR
iRST_N => CLK_COUNT_400HZ[12].ACLR
iRST_N => CLK_COUNT_400HZ[13].ACLR
iRST_N => CLK_COUNT_400HZ[14].ACLR
iRST_N => CLK_COUNT_400HZ[15].ACLR
iRST_N => CLK_COUNT_400HZ[16].ACLR
iRST_N => CLK_COUNT_400HZ[17].ACLR
iRST_N => CLK_COUNT_400HZ[18].ACLR
iRST_N => CLK_COUNT_400HZ[19].ACLR
iRST_N => state~13.DATAIN
iRST_N => LCD_E~reg0.ENA
iRST_N => LCD_RS~reg0.ENA
iRST_N => LCD_RW_INT.ENA
iRST_N => DATA_BUS_VALUE[7].ENA
iRST_N => DATA_BUS_VALUE[6].ENA
iRST_N => DATA_BUS_VALUE[5].ENA
iRST_N => DATA_BUS_VALUE[4].ENA
iRST_N => DATA_BUS_VALUE[3].ENA
iRST_N => DATA_BUS_VALUE[2].ENA
iRST_N => DATA_BUS_VALUE[1].ENA
iRST_N => DATA_BUS_VALUE[0].ENA
hex1[0] => hex1[0].IN1
hex1[1] => hex1[1].IN1
hex1[2] => hex1[2].IN1
hex1[3] => hex1[3].IN1
hex1[4] => hex1[4].IN1
hex1[5] => hex1[5].IN1
hex1[6] => hex1[6].IN1
hex0[0] => hex0[0].IN1
hex0[1] => hex0[1].IN1
hex0[2] => hex0[2].IN1
hex0[3] => hex0[3].IN1
hex0[4] => hex0[4].IN1
hex0[5] => hex0[5].IN1
hex0[6] => hex0[6].IN1
hex2[0] => hex2[0].IN1
hex2[1] => hex2[1].IN1
hex2[2] => hex2[2].IN1
hex2[3] => hex2[3].IN1
hex2[4] => hex2[4].IN1
hex2[5] => hex2[5].IN1
hex2[6] => hex2[6].IN1
hex3[0] => hex3[0].IN1
hex3[1] => hex3[1].IN1
hex3[2] => hex3[2].IN1
hex3[3] => hex3[3].IN1
hex3[4] => hex3[4].IN1
hex3[5] => hex3[5].IN1
hex3[6] => hex3[6].IN1
hex4[0] => hex4[0].IN1
hex4[1] => hex4[1].IN1
hex4[2] => hex4[2].IN1
hex4[3] => hex4[3].IN1
hex4[4] => hex4[4].IN1
hex4[5] => hex4[5].IN1
hex4[6] => hex4[6].IN1
hex5[0] => hex5[0].IN1
hex5[1] => hex5[1].IN1
hex5[2] => hex5[2].IN1
hex5[3] => hex5[3].IN1
hex5[4] => hex5[4].IN1
hex5[5] => hex5[5].IN1
hex5[6] => hex5[6].IN1
hex6[0] => hex6[0].IN1
hex6[1] => hex6[1].IN1
hex6[2] => hex6[2].IN1
hex6[3] => hex6[3].IN1
hex6[4] => hex6[4].IN1
hex6[5] => hex6[5].IN1
hex6[6] => hex6[6].IN1
hex7[0] => hex7[0].IN1
hex7[1] => hex7[1].IN1
hex7[2] => hex7[2].IN1
hex7[3] => hex7[3].IN1
hex7[4] => hex7[4].IN1
hex7[5] => hex7[5].IN1
hex7[6] => hex7[6].IN1
cont_a[0] => cont_a[0].IN1
cont_a[1] => cont_a[1].IN1
cont_a[2] => cont_a[2].IN1
cont_a[3] => cont_a[3].IN1
cont_a[4] => cont_a[4].IN1
cont_a[5] => cont_a[5].IN1
cont_a[6] => cont_a[6].IN1
cont_a[7] => cont_a[7].IN1
cont_a[8] => cont_a[8].IN1
cont_a[9] => cont_a[9].IN1
cont_a[10] => cont_a[10].IN1
cont_a[11] => cont_a[11].IN1
cont_a[12] => cont_a[12].IN1
cont_a[13] => cont_a[13].IN1
cont_a[14] => cont_a[14].IN1
cont_a[15] => cont_a[15].IN1
cont_a[16] => cont_a[16].IN1
cont_a[17] => cont_a[17].IN1
cont_a[18] => cont_a[18].IN1
cont_a[19] => cont_a[19].IN1
cont_a[20] => cont_a[20].IN1
cont_a[21] => cont_a[21].IN1
cont_a[22] => cont_a[22].IN1
cont_a[23] => cont_a[23].IN1
cont_a[24] => cont_a[24].IN1
cont_a[25] => cont_a[25].IN1
cont_a[26] => cont_a[26].IN1
cont_a[27] => cont_a[27].IN1
cont_a[28] => cont_a[28].IN1
cont_a[29] => cont_a[29].IN1
cont_a[30] => cont_a[30].IN1
cont_a[31] => cont_a[31].IN1
cont_a[32] => cont_a[32].IN1
cont_e[0] => cont_e[0].IN1
cont_e[1] => cont_e[1].IN1
cont_e[2] => cont_e[2].IN1
cont_e[3] => cont_e[3].IN1
cont_e[4] => cont_e[4].IN1
cont_e[5] => cont_e[5].IN1
cont_e[6] => cont_e[6].IN1
cont_e[7] => cont_e[7].IN1
cont_e[8] => cont_e[8].IN1
cont_e[9] => cont_e[9].IN1
cont_e[10] => cont_e[10].IN1
cont_e[11] => cont_e[11].IN1
cont_e[12] => cont_e[12].IN1
cont_e[13] => cont_e[13].IN1
cont_e[14] => cont_e[14].IN1
cont_e[15] => cont_e[15].IN1
cont_e[16] => cont_e[16].IN1
cont_e[17] => cont_e[17].IN1
cont_e[18] => cont_e[18].IN1
cont_e[19] => cont_e[19].IN1
cont_e[20] => cont_e[20].IN1
cont_e[21] => cont_e[21].IN1
cont_e[22] => cont_e[22].IN1
cont_e[23] => cont_e[23].IN1
cont_e[24] => cont_e[24].IN1
cont_e[25] => cont_e[25].IN1
cont_e[26] => cont_e[26].IN1
cont_e[27] => cont_e[27].IN1
cont_e[28] => cont_e[28].IN1
cont_e[29] => cont_e[29].IN1
cont_e[30] => cont_e[30].IN1
cont_e[31] => cont_e[31].IN1
cont_e[32] => cont_e[32].IN1
botoes[0] => ~NO_FANOUT~
botoes[1] => ~NO_FANOUT~
botoes[2] => ~NO_FANOUT~
botoes[3] => ~NO_FANOUT~
LCD_RS <= LCD_RS~reg0.DB_MAX_OUTPUT_PORT_TYPE
LCD_E <= LCD_E~reg0.DB_MAX_OUTPUT_PORT_TYPE
LCD_RW <= LCD_RW_INT.DB_MAX_OUTPUT_PORT_TYPE
DATA_BUS[0] <> DATA_BUS[0]
DATA_BUS[1] <> DATA_BUS[1]
DATA_BUS[2] <> DATA_BUS[2]
DATA_BUS[3] <> DATA_BUS[3]
DATA_BUS[4] <> DATA_BUS[4]
DATA_BUS[5] <> DATA_BUS[5]
DATA_BUS[6] <> DATA_BUS[6]
DATA_BUS[7] <> DATA_BUS[7]


|moles_attack|LCD_Display:u1|LCD_display_string:u1
index[0] => Decoder0.IN3
index[0] => Mux0.IN34
index[0] => Mux1.IN34
index[0] => Mux2.IN34
index[0] => Mux3.IN34
index[0] => Mux4.IN34
index[0] => Mux5.IN34
index[0] => Mux6.IN34
index[0] => Decoder2.IN3
index[0] => Decoder3.IN4
index[0] => Decoder4.IN3
index[1] => Decoder0.IN2
index[1] => Mux0.IN33
index[1] => Mux1.IN33
index[1] => Mux2.IN33
index[1] => Mux3.IN33
index[1] => Mux4.IN33
index[1] => Mux5.IN33
index[1] => Mux6.IN33
index[1] => Decoder3.IN3
index[1] => Decoder4.IN2
index[2] => Mux0.IN32
index[2] => Mux1.IN32
index[2] => Mux2.IN32
index[2] => Mux3.IN32
index[2] => Mux4.IN32
index[2] => Mux5.IN32
index[2] => Mux6.IN32
index[2] => Decoder1.IN1
index[2] => Decoder2.IN2
index[2] => Decoder3.IN2
index[2] => Decoder4.IN1
index[3] => Decoder0.IN1
index[3] => Mux0.IN31
index[3] => Mux1.IN31
index[3] => Mux2.IN31
index[3] => Mux3.IN31
index[3] => Mux4.IN31
index[3] => Mux5.IN31
index[3] => Mux6.IN31
index[3] => Decoder1.IN0
index[3] => Decoder2.IN1
index[3] => Decoder3.IN1
index[3] => Decoder4.IN0
index[4] => Decoder0.IN0
index[4] => Mux0.IN30
index[4] => Mux1.IN30
index[4] => Mux2.IN30
index[4] => Mux3.IN30
index[4] => Mux4.IN30
index[4] => Mux5.IN30
index[4] => Mux6.IN30
index[4] => Decoder2.IN0
index[4] => Decoder3.IN0
out[0] <= out[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= <GND>
hex0[0] => Decoder5.IN6
hex0[1] => Decoder5.IN5
hex0[2] => Decoder5.IN4
hex0[3] => Decoder5.IN3
hex0[4] => Decoder5.IN2
hex0[5] => Decoder5.IN1
hex0[6] => Decoder5.IN0
hex1[0] => LessThan0.IN14
hex1[1] => LessThan0.IN13
hex1[2] => LessThan0.IN12
hex1[3] => LessThan0.IN11
hex1[4] => LessThan0.IN10
hex1[5] => LessThan0.IN9
hex1[6] => LessThan0.IN8
hex2[0] => ~NO_FANOUT~
hex2[1] => ~NO_FANOUT~
hex2[2] => ~NO_FANOUT~
hex2[3] => ~NO_FANOUT~
hex2[4] => ~NO_FANOUT~
hex2[5] => ~NO_FANOUT~
hex2[6] => ~NO_FANOUT~
hex3[0] => ~NO_FANOUT~
hex3[1] => ~NO_FANOUT~
hex3[2] => ~NO_FANOUT~
hex3[3] => ~NO_FANOUT~
hex3[4] => ~NO_FANOUT~
hex3[5] => ~NO_FANOUT~
hex3[6] => ~NO_FANOUT~
hex4[0] => ~NO_FANOUT~
hex4[1] => ~NO_FANOUT~
hex4[2] => ~NO_FANOUT~
hex4[3] => ~NO_FANOUT~
hex4[4] => ~NO_FANOUT~
hex4[5] => ~NO_FANOUT~
hex4[6] => ~NO_FANOUT~
hex5[0] => ~NO_FANOUT~
hex5[1] => ~NO_FANOUT~
hex5[2] => ~NO_FANOUT~
hex5[3] => ~NO_FANOUT~
hex5[4] => ~NO_FANOUT~
hex5[5] => ~NO_FANOUT~
hex5[6] => ~NO_FANOUT~
hex6[0] => Mux6.IN35
hex6[1] => Mux5.IN35
hex6[2] => Mux4.IN35
hex6[3] => Mux3.IN35
hex6[4] => Mux2.IN35
hex6[5] => Mux1.IN35
hex6[6] => Mux0.IN35
hex7[0] => Mux6.IN36
hex7[1] => Mux5.IN36
hex7[2] => Mux4.IN36
hex7[3] => Mux3.IN36
hex7[4] => Mux2.IN36
hex7[5] => Mux1.IN36
hex7[6] => Mux0.IN36
cont_a[0] => ~NO_FANOUT~
cont_a[1] => ~NO_FANOUT~
cont_a[2] => ~NO_FANOUT~
cont_a[3] => ~NO_FANOUT~
cont_a[4] => ~NO_FANOUT~
cont_a[5] => ~NO_FANOUT~
cont_a[6] => ~NO_FANOUT~
cont_a[7] => ~NO_FANOUT~
cont_a[8] => ~NO_FANOUT~
cont_a[9] => ~NO_FANOUT~
cont_a[10] => ~NO_FANOUT~
cont_a[11] => ~NO_FANOUT~
cont_a[12] => ~NO_FANOUT~
cont_a[13] => ~NO_FANOUT~
cont_a[14] => ~NO_FANOUT~
cont_a[15] => ~NO_FANOUT~
cont_a[16] => ~NO_FANOUT~
cont_a[17] => ~NO_FANOUT~
cont_a[18] => ~NO_FANOUT~
cont_a[19] => ~NO_FANOUT~
cont_a[20] => ~NO_FANOUT~
cont_a[21] => ~NO_FANOUT~
cont_a[22] => ~NO_FANOUT~
cont_a[23] => ~NO_FANOUT~
cont_a[24] => ~NO_FANOUT~
cont_a[25] => ~NO_FANOUT~
cont_a[26] => ~NO_FANOUT~
cont_a[27] => ~NO_FANOUT~
cont_a[28] => ~NO_FANOUT~
cont_a[29] => ~NO_FANOUT~
cont_a[30] => ~NO_FANOUT~
cont_a[31] => ~NO_FANOUT~
cont_a[32] => ~NO_FANOUT~
cont_e[0] => ~NO_FANOUT~
cont_e[1] => ~NO_FANOUT~
cont_e[2] => ~NO_FANOUT~
cont_e[3] => ~NO_FANOUT~
cont_e[4] => ~NO_FANOUT~
cont_e[5] => ~NO_FANOUT~
cont_e[6] => ~NO_FANOUT~
cont_e[7] => ~NO_FANOUT~
cont_e[8] => ~NO_FANOUT~
cont_e[9] => ~NO_FANOUT~
cont_e[10] => ~NO_FANOUT~
cont_e[11] => ~NO_FANOUT~
cont_e[12] => ~NO_FANOUT~
cont_e[13] => ~NO_FANOUT~
cont_e[14] => ~NO_FANOUT~
cont_e[15] => ~NO_FANOUT~
cont_e[16] => ~NO_FANOUT~
cont_e[17] => ~NO_FANOUT~
cont_e[18] => ~NO_FANOUT~
cont_e[19] => ~NO_FANOUT~
cont_e[20] => ~NO_FANOUT~
cont_e[21] => ~NO_FANOUT~
cont_e[22] => ~NO_FANOUT~
cont_e[23] => ~NO_FANOUT~
cont_e[24] => ~NO_FANOUT~
cont_e[25] => ~NO_FANOUT~
cont_e[26] => ~NO_FANOUT~
cont_e[27] => ~NO_FANOUT~
cont_e[28] => ~NO_FANOUT~
cont_e[29] => ~NO_FANOUT~
cont_e[30] => ~NO_FANOUT~
cont_e[31] => ~NO_FANOUT~
cont_e[32] => ~NO_FANOUT~
botoes[0] => ~NO_FANOUT~
botoes[1] => ~NO_FANOUT~
botoes[2] => ~NO_FANOUT~
botoes[3] => ~NO_FANOUT~


|moles_attack|DeBounce:comb_406
clk => DB_out~reg0.CLK
clk => q_reg[0].CLK
clk => q_reg[1].CLK
clk => q_reg[2].CLK
clk => q_reg[3].CLK
clk => q_reg[4].CLK
clk => q_reg[5].CLK
clk => q_reg[6].CLK
clk => q_reg[7].CLK
clk => q_reg[8].CLK
clk => q_reg[9].CLK
clk => q_reg[10].CLK
clk => DFF2.CLK
clk => DFF1.CLK
n_reset => DFF1.OUTPUTSELECT
n_reset => DFF2.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
button_in => DFF1.DATAA
DB_out <= DB_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|moles_attack|DeBounce:comb_407
clk => DB_out~reg0.CLK
clk => q_reg[0].CLK
clk => q_reg[1].CLK
clk => q_reg[2].CLK
clk => q_reg[3].CLK
clk => q_reg[4].CLK
clk => q_reg[5].CLK
clk => q_reg[6].CLK
clk => q_reg[7].CLK
clk => q_reg[8].CLK
clk => q_reg[9].CLK
clk => q_reg[10].CLK
clk => DFF2.CLK
clk => DFF1.CLK
n_reset => DFF1.OUTPUTSELECT
n_reset => DFF2.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
button_in => DFF1.DATAA
DB_out <= DB_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|moles_attack|DeBounce:comb_408
clk => DB_out~reg0.CLK
clk => q_reg[0].CLK
clk => q_reg[1].CLK
clk => q_reg[2].CLK
clk => q_reg[3].CLK
clk => q_reg[4].CLK
clk => q_reg[5].CLK
clk => q_reg[6].CLK
clk => q_reg[7].CLK
clk => q_reg[8].CLK
clk => q_reg[9].CLK
clk => q_reg[10].CLK
clk => DFF2.CLK
clk => DFF1.CLK
n_reset => DFF1.OUTPUTSELECT
n_reset => DFF2.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
button_in => DFF1.DATAA
DB_out <= DB_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|moles_attack|DeBounce:comb_409
clk => DB_out~reg0.CLK
clk => q_reg[0].CLK
clk => q_reg[1].CLK
clk => q_reg[2].CLK
clk => q_reg[3].CLK
clk => q_reg[4].CLK
clk => q_reg[5].CLK
clk => q_reg[6].CLK
clk => q_reg[7].CLK
clk => q_reg[8].CLK
clk => q_reg[9].CLK
clk => q_reg[10].CLK
clk => DFF2.CLK
clk => DFF1.CLK
n_reset => DFF1.OUTPUTSELECT
n_reset => DFF2.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
n_reset => q_reg.OUTPUTSELECT
button_in => DFF1.DATAA
DB_out <= DB_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|moles_attack|LFSR_counter:comb_418
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE


